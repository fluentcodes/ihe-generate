/**
 * Testtreiber ePA-Frontend des Versicherten
 * REST Schnittstelle einer Test-App fuer das ePA-Modul FdV
 *
 * The version of the OpenAPI document: 2.0.4
 * Contact: software-development@gematik.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.fluentcodes.ihe.gematik.fdv.api;

import org.fluentcodes.ihe.gematik.fdv.model.ChangeProviderRequestDTO;
import org.fluentcodes.ihe.gematik.fdv.model.GetNotificationInformationRequestDTO;
import org.fluentcodes.ihe.gematik.fdv.model.GetNotificationInformationResponseDTO;
import org.fluentcodes.ihe.gematik.fdv.model.NotificationInformationRequestDTO;
import org.fluentcodes.ihe.gematik.fdv.model.ResponseDTO;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * Testtreiber ePA-Frontend des Versicherten
 *
 * <p>REST Schnittstelle einer Test-App fuer das ePA-Modul FdV
 *
 * API tests for AdministrationApi
 */
public class AdministrationApiTest {


    private AdministrationApi api;

    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);

        api = JAXRSClientFactory.create("https://frontend.titus.ti-dienste.de", AdministrationApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Anbieter wechseln
     *
     * Diese Operation führt den Anwendungsfall \&quot;Anbieter wechseln\&quot; in einer mit insurantId identifizierten Aktensession aus.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeProvider1Test() {
        ChangeProviderRequestDTO changeProviderRequestDTO = null;
        //ResponseDTO response = api.changeProvider1(changeProviderRequestDTO);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Hinterlegte Benachrichtigungsadressen abfragen
     *
     * Diese Operation führt den Anwendungsfall \&quot;Benachrichtigungsadresse für Geräteautorisierung abfragen\&quot; in einer mit insurantId identifizierte Aktensession aus.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNotificationInformation1Test() {
        GetNotificationInformationRequestDTO getNotificationInformationRequestDTO = null;
        //GetNotificationInformationResponseDTO response = api.getNotificationInformation1(getNotificationInformationRequestDTO);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Benachrichtigungsadresse für Geräteautorisierung aktualisieren
     *
     * Diese Operation führt den Anwendungsfall \&quot;Benachrichtigungsadresse für Geräteautorisierung aktualisieren\&quot; in einer mit insurantId identifizierte Aktensession aus. Hinterlegt eine Benachrichtigungsadresse für das Aktenkonto.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putNotificationInformation1Test() {
        NotificationInformationRequestDTO notificationInformationRequestDTO = null;
        //ResponseDTO response = api.putNotificationInformation1(notificationInformationRequestDTO);
        //assertNotNull(response);
        // TODO: test validations


    }
    
}
